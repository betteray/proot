name: CI

on:
  workflow_dispatch:
  push:
    branches: [ action ]
  pull_request:
    branches: [ action ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r21e
    - name: Build Talloc
      env:
        NDK_TOOLCHAINS: ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin
      run: |
        wget https://download.samba.org/pub/talloc/talloc-2.3.3.tar.gz
        tar -zxvf talloc-2.3.3.tar.gz
        cd talloc-2.3.3
        CC=$NDK_TOOLCHAINS/aarch64-linux-android21-clang \
          CPP=$NDK_TOOLCHAINS/aarch64-linux-android21-clang++ \
          AR=$NDK_TOOLCHAINS/aarch64-linux-android-ar \
          LD=$NDK_TOOLCHAINS/aarch64-linux-android-ld \
          STRIP=$NDK_TOOLCHAINS/aarch64-linux-android-strip \
          OBJCOPY=$NDK_TOOLCHAINS/aarch64-linux-android-objcopy \
          OBJDUMP=$NDK_TOOLCHAINS/aarch64-linux-android-objdump \
          ./configure --disable-rpath \
            --disable-python \
            --cross-compile \
            --cross-answers=../cross-answers.txt
        rm -rf lib/replace/wscript
        cp ../replace_wscript lib/replace/wscript
        make
    - name: Build PRoot
      env:
        NDK_TOOLCHAINS: ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin
      run: |
        cd src
        CC=$NDK_TOOLCHAINS/aarch64-linux-android21-clang \
          STRIP=$NDK_TOOLCHAINS/aarch64-linux-android-strip \
          OBJCOPY=$NDK_TOOLCHAINS/aarch64-linux-android-objcopy \
          OBJDUMP=$NDK_TOOLCHAINS/aarch64-linux-android-objdump \
          CFLAGS=-I../talloc-2.3.3 \
          LDFLAGS=-L../talloc-2.3.3/bin/default \
          make V=1
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: proot
        path: ./src
